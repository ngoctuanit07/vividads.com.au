<?php

class Artis_Vendor_Adminhtml_VendorController extends Mage_Adminhtml_Controller_Action
{

	protected function _initAction() {
		$this->loadLayout()
			->_setActiveMenu('vendor/items')
			->_addBreadcrumb(Mage::helper('adminhtml')->__('Items Manager'), Mage::helper('adminhtml')->__('Item Manager'));
		
		return $this;
	}   
 
	public function indexAction() {
		$this->_initAction()
			->renderLayout();
	}

	public function editAction() {
		$id     = $this->getRequest()->getParam('id');
		$model  = Mage::getModel('vendor/vendor')->load($id);

		if ($model->getId() || $id == 0) {
			$data = Mage::getSingleton('adminhtml/session')->getFormData(true);
			if (!empty($data)) {
				$model->setData($data);
			}

			Mage::register('vendor_data', $model);

			$this->loadLayout();
			$this->_setActiveMenu('vendor/items');

			$this->_addBreadcrumb(Mage::helper('adminhtml')->__('Item Manager'), Mage::helper('adminhtml')->__('Item Manager'));
			$this->_addBreadcrumb(Mage::helper('adminhtml')->__('Item News'), Mage::helper('adminhtml')->__('Item News'));

			$this->getLayout()->getBlock('head')->setCanLoadExtJs(true);

			$this->_addContent($this->getLayout()->createBlock('vendor/adminhtml_vendor_edit'))
				->_addLeft($this->getLayout()->createBlock('vendor/adminhtml_vendor_edit_tabs'));

			$this->renderLayout();
		} else {
			Mage::getSingleton('adminhtml/session')->addError(Mage::helper('vendor')->__('Item does not exist'));
			$this->_redirect('*/*/');
		}
	}
 
	public function newAction() {
		$this->_forward('edit');
	}
 
	public function saveAction() {
		if ($data = $this->getRequest()->getPost()) {
			
			if(isset($_FILES['filename']['name']) && $_FILES['filename']['name'] != '') {
				try {	
					/* Starting upload */	
					$uploader = new Varien_File_Uploader('filename');
					
					// Any extention would work
	           		$uploader->setAllowedExtensions(array('jpg','jpeg','gif','png'));
					$uploader->setAllowRenameFiles(false);
					
					// Set the file upload mode 
					// false -> get the file directly in the specified folder
					// true -> get the file in the product like folders 
					//	(file.jpg will go in something like /media/f/i/file.jpg)
					$uploader->setFilesDispersion(false);
							
					// We set media as the upload dir
					$path = Mage::getBaseDir('media') . DS ;
					$uploader->save($path, $_FILES['filename']['name'] );
					
				} catch (Exception $e) {
		      
		        }
	        
		        //this way the name is saved in DB
	  			$data['filename'] = $_FILES['filename']['name'];
			}
	  			
	  			
			$model = Mage::getModel('vendor/vendor');		
			$model->setData($data)
				->setId($this->getRequest()->getParam('id'));
			
			try {
				if ($model->getCreatedTime == NULL || $model->getUpdateTime() == NULL) {
					$model->setCreatedTime(now())
						->setUpdateTime(now());
				} else {
					$model->setUpdateTime(now());
				}	
				
				$model->save();
				Mage::getSingleton('adminhtml/session')->addSuccess(Mage::helper('vendor')->__('Item was successfully saved'));
				Mage::getSingleton('adminhtml/session')->setFormData(false);

				if ($this->getRequest()->getParam('back')) {
					$this->_redirect('*/*/edit', array('id' => $model->getId()));
					return;
				}
				$this->_redirect('*/*/');
				return;
            } catch (Exception $e) {
                Mage::getSingleton('adminhtml/session')->addError($e->getMessage());
                Mage::getSingleton('adminhtml/session')->setFormData($data);
                $this->_redirect('*/*/edit', array('id' => $this->getRequest()->getParam('id')));
                return;
            }
        }
        Mage::getSingleton('adminhtml/session')->addError(Mage::helper('vendor')->__('Unable to find item to save'));
        $this->_redirect('*/*/');
	}
 
	public function deleteAction() {
		if( $this->getRequest()->getParam('id') > 0 ) {
			try {
				$model = Mage::getModel('vendor/vendor');
				 
				$model->setId($this->getRequest()->getParam('id'))
					->delete();
					 
				Mage::getSingleton('adminhtml/session')->addSuccess(Mage::helper('adminhtml')->__('Item was successfully deleted'));
				$this->_redirect('*/*/');
			} catch (Exception $e) {
				Mage::getSingleton('adminhtml/session')->addError($e->getMessage());
				$this->_redirect('*/*/edit', array('id' => $this->getRequest()->getParam('id')));
			}
		}
		$this->_redirect('*/*/');
	}

    public function massDeleteAction() {
        $vendorIds = $this->getRequest()->getParam('vendor');
        if(!is_array($vendorIds)) {
			Mage::getSingleton('adminhtml/session')->addError(Mage::helper('adminhtml')->__('Please select item(s)'));
        } else {
            try {
                foreach ($vendorIds as $vendorId) {
                    $vendor = Mage::getModel('vendor/vendor')->load($vendorId);
                    $vendor->delete();
                }
                Mage::getSingleton('adminhtml/session')->addSuccess(
                    Mage::helper('adminhtml')->__(
                        'Total of %d record(s) were successfully deleted', count($vendorIds)
                    )
                );
            } catch (Exception $e) {
                Mage::getSingleton('adminhtml/session')->addError($e->getMessage());
            }
        }
        $this->_redirect('*/*/index');
    }
	
    //public function massStatusAction()
    //{
    //    $vendorIds = $this->getRequest()->getParam('vendor');
    //    if(!is_array($vendorIds)) {
    //        Mage::getSingleton('adminhtml/session')->addError($this->__('Please select item(s)'));
    //    } else {
    //        try {
    //            foreach ($vendorIds as $vendorId) {
    //                $vendor = Mage::getSingleton('vendor/vendor')
    //                    ->load($vendorId)
    //                    ->setStatus($this->getRequest()->getParam('status'))
    //                    ->setIsMassupdate(true)
    //                    ->save();
    //            }
    //            $this->_getSession()->addSuccess(
    //                $this->__('Total of %d record(s) were successfully updated', count($vendorIds))
    //            );
    //        } catch (Exception $e) {
    //            $this->_getSession()->addError($e->getMessage());
    //        }
    //    }
    //    $this->_redirect('*/*/index');
    //}
    
        public function massStatusAction()
    {
        $vendorIds = $this->getRequest()->getParam('vendor');
        if(!is_array($vendorIds)) {
            Mage::getSingleton('adminhtml/session')->addError($this->__('Please select item(s)'));
        } else {
            try {
                foreach ($vendorIds as $vendorId) {
                    $vendor = Mage::getSingleton('vendor/vendor')
                        ->load($vendorId)
                        ->setProgress($this->getRequest()->getParam('status'))
                        ->setIsMassupdate(true)
                        ->save();
			
			$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
			$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_Read');
	
			$temptableDocket=Mage::getSingleton('core/resource')->getTableName('vendor_docket');
			
			$sqlDocket = $connectionRead->select()
					->from($temptableDocket, array('*'))
					->where('vendor_list_id=?', $vendorId);
			$chkDocket = $connectionRead->fetchAll($sqlDocket);
			
			if(count($chkDocket) > 0)
			{
				$connectionWrite->beginTransaction();
				$data = array();
				$data['status'] = $this->getRequest()->getParam('status');
				$where = $connectionWrite->quoteInto('vendor_list_id =?', $vendorId);
				$connectionWrite->update($temptableDocket, $data, $where);
				$connectionWrite->commit();
			}
                }
                $this->_getSession()->addSuccess(
                    $this->__('Total of %d record(s) were successfully updated', count($vendorIds))
                );
            } catch (Exception $e) {
                $this->_getSession()->addError($e->getMessage());
            }
        }
        $this->_redirect('*/*/index');
    }
    
    public function massVendornameAction()
    {
        $vendorIds = $this->getRequest()->getParam('vendor');
        if(!is_array($vendorIds)) {
            Mage::getSingleton('adminhtml/session')->addError($this->__('Please select item(s)'));
        } else {
            try {
                foreach ($vendorIds as $vendorId) {
                    $vendor = Mage::getSingleton('vendor/vendor')
                        ->load($vendorId)
                        ->setTargetUser($this->getRequest()->getParam('target_user'))
                        ->setIsMassupdate(true)
                        ->save();
                }
                $this->_getSession()->addSuccess(
                    $this->__('Total of %d record(s) were successfully updated', count($vendorIds))
                );
            } catch (Exception $e) {
                $this->_getSession()->addError($e->getMessage());
            }
        }
        $this->_redirect('*/*/index');
    }
  
    public function exportCsvAction()
    {
        $fileName   = 'vendor.csv';
        $content    = $this->getLayout()->createBlock('vendor/adminhtml_vendor_grid')
            ->getCsv();

        $this->_sendUploadResponse($fileName, $content);
    }

    public function exportXmlAction()
    {
        $fileName   = 'vendor.xml';
        $content    = $this->getLayout()->createBlock('vendor/adminhtml_vendor_grid')
            ->getXml();

        $this->_sendUploadResponse($fileName, $content);
    }

    protected function _sendUploadResponse($fileName, $content, $contentType='application/octet-stream')
    {
        $response = $this->getResponse();
        $response->setHeader('HTTP/1.1 200 OK','');
        $response->setHeader('Pragma', 'public', true);
        $response->setHeader('Cache-Control', 'must-revalidate, post-check=0, pre-check=0', true);
        $response->setHeader('Content-Disposition', 'attachment; filename='.$fileName);
        $response->setHeader('Last-Modified', date('r'));
        $response->setHeader('Accept-Ranges', 'bytes');
        $response->setHeader('Content-Length', strlen($content));
        $response->setHeader('Content-type', $contentType);
        $response->setBody($content);
        $response->sendResponse();
        die;
    }
    
   public function setvendorAction()
    {
	//print_r($_REQUEST);exit;
	extract($_REQUEST);
	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	
	$temptableVendor=Mage::getSingleton('core/resource')->getTableName('vendor_product');
	//$sqlVendor="SELECT * FROM ".$temptableVendor." WHERE product_id = '".$product_id."' ";
	$sqlVendor = $connectionRead->select()
				->from($temptableVendor, array('*'))
				->where('product_id=?', $product_id);
	$chkVendor = $connectionRead->fetchAll($sqlVendor);
	
	if(count($chkVendor) > 0)
	{
		//$sqlVendor="UPDATE ".$temptableVendor." SET vendor_id = '".$user_id."' WHERE product_id = '".$product_id."' ";
		//$chkVendor = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlVendor);
		$connectionWrite->beginTransaction();
                $data = array();
                $data['vendor_id'] = $user_id;
                $where = $connectionWrite->quoteInto('product_id =?', $product_id);
                $connectionWrite->update($temptableVendor, $data, $where);
                $connectionWrite->commit();
		
	}
	else
	{
		//$sqlVendor="INSERT INTO ".$temptableVendor." SET vendor_id = '".$user_id."' , product_id = '".$product_id."' ";
		//$chkVendor = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlVendor);
		$connectionWrite->beginTransaction();
		$data = array();
		$data['vendor_id']= $user_id;
		$data['product_id']=$product_id;
		$connectionWrite->insert($temptableVendor, $data);
		$connectionWrite->commit(); 
	}
	
	mage::helper('AdminLogger')->updatelog($product_id,'Update Vendor for Product');
	$url = Mage::helper('adminhtml')->getUrl("adminhtml/catalog_product/edit/id/".$product_id);
	$url = str_replace('p//c','p/admin/c',$url);
        Mage::log($url); //To check if URL is correct (and it is correct)
        Mage::app()->getResponse()->setRedirect($url);
    }
    
//    public function assigntoAction()
//    {
//	//print_r($_REQUEST);exit;
//	extract($_REQUEST);
//	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
//	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
//	
//	//$temptableService=Mage::getSingleton('core/resource')->getTableName('vendor_order');
//	$temptableService=Mage::getSingleton('core/resource')->getTableName('vendor_item');
//	$temptableItem=Mage::getSingleton('core/resource')->getTableName('sales_flat_order_item');
//	
//	//$sqlService="SELECT * FROM  ".$temptableService." WHERE  item_id = '".$itemid."' AND order_id ='".$orderid."' ";
//	$sqlService = $connectionRead->select()
//				->from($temptableService, array('*'))
//				->where("item_id = '".$itemid."' AND order_id ='".$orderid."'");
//	$chkService = $connectionWrite->fetchAll($sqlService);
//	
//	//$sqlItem="SELECT * FROM  ".$temptableItem." WHERE  item_id = '".$itemid."' ";
//	$sqlItem = $connectionRead->select()
//				->from($temptableItem, array('*'))
//				->where('item_id=?', $itemid);
//	$chkItem = $connectionRead->fetchAll($sqlItem);
//	
//	if(count($chkService))
//	{
//		//$sqlService="UPDATE  ".$temptableService." SET assign_to = '".$userid."' WHERE item_id = '".$itemid."' AND order_id ='".$orderid."' ";
//		//$chkService = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlService);
//		$connectionWrite->beginTransaction();
//                $data = array();
//                $data['target_user'] = $userid;
//                $where = $connectionWrite->quoteInto("item_id = '".$itemid."' AND order_id ='".$orderid."'");
//                $connectionWrite->update($temptableService, $data, $where);
//                $connectionWrite->commit();
//	}
//	else
//	{
//		//$sqlService="INSERT INTO  ".$temptableService." SET assign_to = '".$userid."' , item_id = '".$itemid."' , order_id ='".$orderid."', product_id ='".$chkItem[0]['product_id']."' ";
//		//$chkService = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlService);
//		
//		$connectionWrite->beginTransaction();
//		$data = array();
//		$data['target_user']= $userid;
//		$data['item_id']=$itemid;
//		$data['order_id']=$orderid;
//		$data['product_id']=$chkItem[0]['product_id'];
//		$connectionWrite->insert($temptableService, $data);
//		$connectionWrite->commit();
//	}
//	Mage::dispatchEvent('model_save_after', array('object'=>Mage::getSingleton('vendor/vendor')));
//	mage::helper('AdminLogger')->updatelog($orderid,'Update Vendor for Sale');
//	
//	
//    }


	public function assigntoAction()
	{
	    //print_r($_REQUEST);exit;
	    extract($_REQUEST);
	    $connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	    $connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	    
	    
	    $temptableService=Mage::getSingleton('core/resource')->getTableName('vendor_item');
	    $temptableProduct=Mage::getSingleton('core/resource')->getTableName('vendor_product');
	    
		foreach($ot_author_user as $key=>$user_id)
		{
			$sqlItem = $connectionRead->select()
				->from($temptableService, array('*'))
				->where("item_id = '".$key."' AND order_id ='".$orderid."'");
			$chkItem = $connectionRead->fetchAll($sqlItem);
			if(count($chkItem)>0)
			{
			
				$connectionWrite->beginTransaction();
				$data = array();
				$data['target_user'] = $user_id;
				$data['priority'] = $priority[$key];
				$where = $connectionWrite->quoteInto("item_id = '".$key."' AND order_id ='".$orderid."'");
				$connectionWrite->update($temptableService, $data, $where);
				$connectionWrite->commit();
				
				//Start 06_03_2014
				if($chkItem[0]['target_user'])
				{
					if($chkItem[0]['target_user'] != $user_id)
					{
						$user = Mage::getSingleton('admin/session');
						$userId = $user->getUser()->getUserId();
						
						$order = Mage::getModel('sales/order')->load($orderid);
						
						
						//$userEmail = $user->getUser()->getEmail();
						//$userFirstname = $user->getUser()->getFirstname();
						//$userLastname = $user->getUser()->getLastname();
						//$userUsername = $user->getUser()->getUsername();
						//$userPassword = $user->getUser()->getPassword();
						
						$dataall= array('user_id'=>$userId,
								'target_id'=>$chkItem[0]['target_user'],
								'caption'=>'A job has veen deleted in you account.',
								'description'=>'A Job has been deleted in you account. The order id is '.$order->getIncrementId().'.',
								'type'=>'order',
								'entity_id'=>$order->getId(),
								'entity_description'=>'order #'.$order->getIncrementId(),
								'task_type'=>'Independent',
								'task_create'=>'no',
								'admin'=>'yes'
								);
						
						Mage::getModel('systemalert/systemalert')->sendallalert($dataall);
						
						
						$user = Mage::getSingleton('admin/session');
						$userId = $user->getUser()->getUserId();
						//$userEmail = $user->getUser()->getEmail();
						//$userFirstname = $user->getUser()->getFirstname();
						//$userLastname = $user->getUser()->getLastname();
						//$userUsername = $user->getUser()->getUsername();
						//$userPassword = $user->getUser()->getPassword();
						
						$dataall= array('user_id'=>$userId,
								'target_id'=>$user_id,
								'caption'=>'A job has veen added in you account.',
								'description'=>'A Job has been added in you account. The order id is '.$order->getIncrementId().'.',
								'type'=>'order',
								'entity_id'=>$order->getId(),
								'entity_description'=>'order #'.$order->getIncrementId(),
								'task_type'=>'Independent',
								'task_create'=>'yes',
								'admin'=>'yes'
								);
						
						Mage::getModel('systemalert/systemalert')->sendallalert($dataall);
					}
				}
				else
				{
					$user = Mage::getSingleton('admin/session');
					$userId = $user->getUser()->getUserId();
					//$userEmail = $user->getUser()->getEmail();
					//$userFirstname = $user->getUser()->getFirstname();
					//$userLastname = $user->getUser()->getLastname();
					//$userUsername = $user->getUser()->getUsername();
					//$userPassword = $user->getUser()->getPassword();
					
					$dataall= array('user_id'=>$userId,
							'target_id'=>$user_id,
							'caption'=>'A job has veen added in you account.',
							'description'=>'A Job has been added in you account. The order id is '.$order->getIncrementId().'.',
							'type'=>'order',
							'entity_id'=>$order->getId(),
							'entity_description'=>'order #'.$order->getIncrementId(),
							'task_type'=>'Independent',
							'task_create'=>'yes',
							'admin'=>'yes'
							);
					
					Mage::getModel('systemalert/systemalert')->sendallalert($dataall);
				}
				//End 06_03_2014
			}
			else{
				
				$order = Mage::getModel("sales/order")->load($orderid); //load order by order id
				$ordered_items = $order->getAllItems();
				
				foreach($ordered_items as $item){
					if($key == $item->getId())
					{
						$sku=$item->getSku();
						$product_id=$item->getProductId();
					}
				}
				$connectionWrite->beginTransaction();
				$data = array();
				$data['target_user'] = $user_id;
				$data['priority'] = $priority[$key];
				$data['item_id'] = $key;
				$data['order_id'] = $orderid;
				$data['product_id'] = $product_id;
				$data['product_sku'] = $sku;
				$data['postdate'] = NOW();
				$connectionWrite->insert($temptableService, $data);
				$connectionWrite->commit();
			}
		    
		    /**************** Start 30_01_2014 ******************/
			//$sqlItem = $connectionRead->select()
			//	->from($temptableService, array('*'))
			//	->where("item_id = '".$key."' AND order_id ='".$orderid."'");
			//$chkItem = $connectionRead->fetchRow($sqlItem);
			//
			//$sqlItem1 = $connectionRead->select()
			//	->from($temptableProduct, array('*'))
			//	->where("product_id = '".$chkItem['product_id']."'");
			//$chkPro = $connectionRead->fetchAll($sqlItem1);
			//
			//if(count($chkPro) > 0)
			//{
			//	try{
			//	//$connectionWrite->beginTransaction();
			//	//$data1 = array();
			//	//$data1['vendor_id'] = $user_id;
			//	//$where1 = $connectionWrite->quoteInto("product_id = '".$chkItem['product_id']."'");
			//	//$connectionWrite->update($temptableProduct, $data1, $where1);
			//	//$connectionWrite->commit();
			//	
			//	$update = "UPDATE ".$temptableProduct." SET vendor_id = '".$user_id."' WHERE product_id ='".$chkItem['product_id']."'";
			//	$connectionWrite->query($update);
			//		
			//	
			//	
			//	}
			//	catch (Exception $e) 
			//	{
			//		echo $e->getMessage();
			//		exit;
			//	}
			//}
			//else
			//{
			//	$connectionWrite->beginTransaction();
			//	$data1 = array();
			//	$data1['vendor_id']= $user_id;
			//	$data1['product_id']=$chkItem['product_id'];
			//	$connectionWrite->insert($temptableProduct, $data1);
			//	$connectionWrite->commit();
			//}
			
		    /**************** End 30_01_2014 ******************/
		}
	   
	    Mage::dispatchEvent('model_save_after', array('object'=>Mage::getSingleton('vendor/vendor')));
	    mage::helper('AdminLogger')->updatelog($orderid,'Update Vendor for Sale');
	    
		$url = Mage::helper('adminhtml')->getUrl("adminhtml/sales_order/view/order_id/".$orderid);
		$url = str_replace('p//c','p/admin/c',$url);
		Mage::log($url); //To check if URL is correct (and it is correct)
		Mage::app()->getResponse()->setRedirect($url);
	    
	    
	}
    
    public function addchatAction()
    {
	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	//print_r($_REQUEST);
	
	extract($_REQUEST);
	
	$user = Mage::getSingleton('admin/session');
	$userId = $user->getUser()->getUserId();
	
	$user_role = Mage::getSingleton('admin/session')->getUser();
	 //Get the role id of the user
	$roleId = implode('', $user_role->getRoles());
	
	$temptableChat=Mage::getSingleton('core/resource')->getTableName('vendor_chat');
	
	//$sqlChat="INSERT INTO  ".$temptableChat." SET  vendor_list_id ='".$listid."', user_id ='".$userId."', roll_type_id = '".$roleId."', comment ='".$comment."', is_read = '1', postdate = NOW() ";
	//$chkChat = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlChat);
	$connectionWrite->beginTransaction();
	$data = array();
	$data['vendor_list_id']= $listid;
	$data['user_id']=$userId;
	$data['roll_type_id']=$roleId;
	$data['comment']=$comment;
	$data['is_read'] = '1';
	$data['postdate'] = NOW();
	$connectionWrite->insert($temptableChat, $data);
	$connectionWrite->commit();
	
	//$sqlChat="SELECT * FROM  ".$temptableChat." WHERE  vendor_list_id ='".$listid."' ORDER BY entity_id DESC ";
	$sqlChat = $connectionRead->select()
				->from($temptableChat, array('*'))
				->where('vendor_list_id=?', $listid)
				->order('entity_id DESC');
	$chkChat = $connectionRead->fetchAll($sqlChat);
	
	foreach($chkChat as $chat)
	{
		$user = Mage::getModel('admin/user')->load($chat['user_id']);
		echo '<div>'.$chat['postdate'].'  '.$user->getName().' : '.$chat['comment'].'</div>';
	}
	
	echo '@@@';
	
	if(Mage::getSingleton('admin/session')->getUser())
	echo 'yes';
	else
	echo 'no';
	
	Mage::dispatchEvent('model_save_after', array('object'=>Mage::getSingleton('vendor/vendor')));
	mage::helper('AdminLogger')->updatelog($listid,'Vendor Chat Entered');
	
    }
    
    public function chatloadAction()
    {
	//print_r($_REQUEST);
	
	extract($_REQUEST);
	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	
	$temptableChat=Mage::getSingleton('core/resource')->getTableName('vendor_chat');
	
	if($read == 1)
	{
	//$sqlChat="UPDATE  ".$temptableChat." SET  is_read = '0' WHERE  vendor_list_id ='".$listid."' ";
	//$chkChat = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlChat);
	$connectionWrite->beginTransaction();
	$data = array();
	$data['is_read'] = 0;
	$where = $connectionWrite->quoteInto('vendor_list_id =?', $listid);
	$connectionWrite->update($temptableChat, $data, $where);
	$connectionWrite->commit();
	}
	
	//$sqlChat="SELECT * FROM  ".$temptableChat." WHERE  vendor_list_id ='".$listid."' ORDER BY entity_id DESC ";
	$sqlChat = $connectionRead->select()
				->from($temptableChat, array('*'))
				->where('vendor_list_id=?', $listid)
				->order('entity_id DESC');
	$chkChat = $connectionRead->fetchAll($sqlChat);
	
	foreach($chkChat as $chat)
	{
		$user = Mage::getModel('admin/user')->load($chat['user_id']);
		echo '<div>'.$chat['postdate'].'  '.$user->getName().' : '.$chat['comment'].'</div>';
	}
	
	echo '@@@';
	
	if(Mage::getSingleton('admin/session')->getUser())
	echo 'yes';
	else
	echo 'no';
	
	Mage::dispatchEvent('model_save_after', array('object'=>Mage::getSingleton('vendor/vendor')));
	mage::helper('AdminLogger')->updatelog($listid,'Admin Chat Entered');
    }
    
    public function printloadAction()
    {
	//print_r($_REQUEST);
	extract($_REQUEST);
	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	
	$temptableProof=Mage::getSingleton('core/resource')->getTableName('proofs');
	if(Mage::getSingleton('core/resource')->getConnection('core_write')->isTableExists($temptableProof))
        {
		//$sqlProof="SELECT * FROM  ".$temptableProof." WHERE  order_id ='".$orderid."' AND item_id ='".$itemid."' AND status = 'Approved' ";
		//$chkProof = Mage::getSingleton('core/resource')->getConnection('core_write')->fetchAll($sqlProof);
		
		$select = $connectionRead->select()
			->from($temptableProof, array('*'))
			//->where("order_id ='".$orderid."' AND item_id ='".$itemid."' AND status = 'Approved'")
			->where("entity_id ='".$proofid."' AND status = 'Approved'");
			//->order('entity_id DESC');
		
		$chkProof = $connectionRead->fetchRow($select);
	}
	
	
	//start 03_03_2014
	//foreach($chkProof as $proof1)
	//{
	//	$total_qty += $proof1['quantity'];
	//}
	//end 03_03_2014
	
	$temptableItem=Mage::getSingleton('core/resource')->getTableName('sales_flat_order_item');
	
	//$sqlItem="SELECT * FROM  ".$temptableItem." WHERE  item_id = '".$itemid."' ";
	$sqlItem = $connectionRead->select()
				->from($temptableItem, array('*'))
				->where('item_id=?', $itemid);
				
	$chkItem = $connectionWrite->fetchAll($sqlItem);
	
	$_Product = Mage::getModel('catalog/product')->load($chkItem[0]['product_id']);
	$temptableOption=Mage::getSingleton('core/resource')->getTableName('vendor_option');
	
	$select = $connectionRead->select()
		->from($temptableOption, array('*'))
		->where("type = 1 AND product_id ='".$chkItem[0]['product_id']."'");
	$result = $connectionRead->fetchAll($select);
	
	//Finish Size
	$finish_size = $this->getcustomvalue($result,'Finish Size');
	
	if(!empty($finish_size))
	{
		foreach($finish_size as $size)
		{
			$allsize .= $size['sub_value'].'<br/>';
		}
	}
	
	//Material
	$finish_size = $this->getcustomvalue($result,'Material');
	
	if(!empty($finish_size))
	{
		foreach($finish_size as $size)
		{
			$material .= $size['sub_value'].'<br/>';
		}
	}
	
	//Requirements
	$finish_size = $this->getcustomvalue($result,'Requirements');
	
	if(!empty($finish_size))
	{
		foreach($finish_size as $size)
		{
			$requirements .= '<strong>'.$size['sub_title'].'</strong> : '.$size['sub_value'].'<br/>';
		}
	}
	
	$url2 = Mage::helper('adminhtml')->getUrl('vendor/adminhtml_vendor/download');
	echo '<div class="printtotal">
	<div onclick="backlist();" class="printbk" style="float:right;margin-right: 10px;">X</div>
        <div class="printlist" style="padding-top: 19px;">
            <table class="printtab" cellspacing="0" cellpadding="0">
                <thead>
                    <tr>
                        <td>Qty:</td>
                        <td>Finish Size :</td>
                        <td>Description:</td>
                        <td>Metarial</td>
                        <td>Requirements</td>
                    </tr>
                </thead>
                <tbody>';
		
                    echo '<tr>
                        <td>'.$chkProof['quantity'].'</td>
                        <td>'.$allsize.'</td>
                        <td>'.$_Product->getDescription().'</td>
                        <td>'.$material.'</td>
                        <td>'.$requirements.'</td>
                    </tr>';
		    
                echo '</tbody>
            </table>
        </div>
	<div class="totalaction">
        <div>';
//		<table class="printtab" cellspacing="0" cellpadding="0">
//			<thead>
//				<tr>
//				    <td>Qty:</td>
//				    <td>file</td>
//				    <td>Download</td>
//				</tr>
//			    </thead>
//			    <tbody>';
//		foreach($chkProof as $proof)
//		{
//                    echo '<tr>
//                        <td>'.$chkProof['quantity'].'</td>
//			<td>'.$chkProof['file'].'</td>
//                        <td><a href="'.str_replace('//s','/admin/s',$url2).'file/'.$chkProof['file'].'/'.'">Download artwork</a></td>
//                    </tr>';
//		}
//		    
//                echo '</tbody>
//		</table>

	echo '<a href="'.str_replace('//s','/admin/s',$url2).'file/'.$chkProof['file'].'/'.'">Download artwork</a></div>
	</div>
    </div>';
    
	 echo '@@@';
	
	if(Mage::getSingleton('admin/session')->getUser())
	echo 'yes';
	else
	echo 'no';
	
	Mage::dispatchEvent('model_save_after', array('object'=>Mage::getSingleton('vendor/vendor')));
	mage::helper('AdminLogger')->updatelog($listid,'Vendor Order Design Printed');
    }
    
	public function getcustomvalue($list, $needle)
	{
	   foreach($list as $key => $list)
	   {
	      if ( $list['title'] === $needle )
	      {
		$temptableOption=Mage::getSingleton('core/resource')->getTableName('vendor_option');
		$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
		
		$select = $connectionRead->select()
			->from($temptableOption, array('*'))
			->where("type = 1 AND parent_id ='".$list['entity_id']."'");
		$result = $connectionRead->fetchAll($select);
		
		return $result;
	      }
	   }
	   return false;
	}
    
    public function docketloadAction()
    {
	extract($_REQUEST);
	$order = Mage::getModel('sales/order')->load($orderid);
	
	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	
	$temptableDocket=Mage::getSingleton('core/resource')->getTableName('vendor_docket');
	
	//$sqlDocket="SELECT * FROM  ".$temptableDocket." WHERE vendor_list_id = '".$listid."' ";
	$sqlDocket = $connectionRead->select()
				->from($temptableDocket, array('*'))
				->where('vendor_list_id=?', $listid);
	$chkDocket = $connectionWrite->fetchAll($sqlDocket);
	
	$temptableItem=Mage::getSingleton('core/resource')->getTableName('vendor_item');
	
	//$sqlItem="SELECT * FROM  ".$temptableItem."  WHERE entity_id ='".$listid."' ";
	$sqlItem = $connectionRead->select()
				->from($temptableItem, array('*'))
				->where('entity_id=?', $listid);
	$chkItem = $connectionWrite->fetchAll($sqlItem);
	
	$url = Mage::helper("adminhtml")->getUrl("vendor/adminhtml_vendor/docketsubmit");
	//$url1 = Mage::helper('adminhtml')->getUrl('BarcodeLabel/Admin/LabelPreviewOrder/order_id/'.$orderid.'/product_id/'.$chkItem[0]['product_id']);
	$url1 = Mage::helper('adminhtml')->getUrl('BarcodeLabel/Admin/LabelPreviewOrder/order_id/'.$orderid.'/product_id/'.$chkItem[0]['product_id'].'/vendor_id/'.$listid);//04_03_2014
	
	echo    '<script type="text/javascript">
   
    
    
</script><div class="totaldoc"><input  id="barurl" value="'.$this->getUrl('BarcodeLabel/Admin/PrintProductLabelsOrder', array('product_id' => $chkItem[0]['product_id'],'order_id' => $orderid )).'count/"  type="hidden">
	<form action="'.str_replace('//s','/admin/s',$url).'" method="post" enctype="multipart/form-data">
             <input type="hidden" name="form_key" value="'.Mage::getSingleton('core/session')->getFormKey().'" />
             <input name="listid" id="listid" value="'.$listid.'"  type="hidden">
	     <span onclick="backdocket();" class="docback" style="float: right;margin-right: 10px;">X</span>
	       <table class="doccss">
	        
		<tr>
		    <td class="tagname">Customer Name</td>
		    <td class="taginput"><input type="text" name="customer_name" value="'.$order->getCustomerName().'"/></td>
		</tr>
		<tr>
		    <td class="tagname">Order Number</td>
		    <td class="taginput">'.$order->getIncrementId().'</td>
		</tr>
		<tr>
		    <td class="tagname">Supplier Invoice</td>
		    <td class="taginput"><input type="text" name="invoice" value="'.$chkDocket[0]['supplier_invoice'].'"/></td>
		</tr>
		<tr>
		    <td class="tagname">Connote Number</td>
		    <td class="taginput"><input type="text" name="connote" value="'.$chkDocket[0]['connote_number'].'"/></td>
		</tr>
		<tr>
		    <td class="tagname">Shipping : Carton</td>
		    <td class="taginput">
			<select name="carton">';
			
			for($i=1;$i<=16;$i++)
			{
				$selected = '';
				if($chkDocket[0]['carton'] == 'C'.$i)
				$selected = 'selected';
				echo '<option value="C'.$i.'" '.$selected.'>C'.$i.'</option>';
			}
			
			if($chkDocket[0]['status'] == '' or $chkDocket[0]['status'] == 'prod')
			$checked1 = 'checked';
			elseif($chkDocket[0]['status'] == 'packed')
			$checked2 = 'checked';
			elseif($chkDocket[0]['status'] == 'sent')
			$checked3 = 'checked';
			   
		echo '</select>
		    </td>
		</tr>
		<tr>
		    <td></td>
		    <td class="taginput">
			<span><input type="radio" name="status" value="prod" '.$checked1.' /> Prod</span>
			<span><input type="radio" name="status" value="packed" '.$checked2.' /> Packed</span>
			<span><input type="radio" name="status" value="sent" '.$checked3.' /> Sent</span>
		    </td>
		</tr>
		
		<tr>
		    <td colspan="2" >
			<input type="submit" name="submit1" value="Submit" class="docsub"/>
		    </td>
		</tr>
		<tr>
		    <td></td>
		    <td class="taginput">
			<img src="'.$url1.'" border="1"/>
		    </td>
		</tr>
		<tr>
		    <td colspan="2" >
			<table cellspacing="0" class="form-list">
                    <tbody>
                        <tr>
                            <td class="label"><label for="label_count">'.$this->__('Label count').'</label></td>
                            <td class="value">
                                <input name="label_count" id="label_count" value="" class=" input-text" type="text"></td>
                            <td class="scope-label"><span class="nobr"></span></td>
                        </tr>
                        <tr>
                            <td class="label"><label for="label_count">'.$this->__('Print').'</label></td>
                            <td class="value">
                                <input type="button" id="print_button" value="'.$this->__('Print').'" onclick="urlMaker()"></td>
                            <td class="scope-label"><span class="nobr"></span></td>
                        </tr>
                    </tbody>
                </table>
		    </td>
		</tr>
		
	       </table> </form>
	       
	       
	    </div>';
	    
		echo '@@@';
	
		if(Mage::getSingleton('admin/session')->getUser())
		echo 'yes';
		else
		echo 'no';
    }
    
    public function docketsubmitAction()
    {
	//print_r($_REQUEST);
	
	extract($_REQUEST);
	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	
	$temptableDocket=Mage::getSingleton('core/resource')->getTableName('vendor_docket');
	
	//$sqlDocket="SELECT * FROM  ".$temptableDocket." WHERE vendor_list_id = '".$listid."' ";
	$sqlDocket = $connectionRead->select()
			->from($temptableDocket, array('*'))
			->where('vendor_list_id=?', $listid);
	$chkDocket = $connectionRead->fetchAll($sqlDocket);
	
	if(count($chkDocket) > 0)
	{
		//$sqlDocket="UPDATE  ".$temptableDocket." SET customer_name = '".$customer_name."',  supplier_invoice ='".$invoice."', connote_number = '".$connote."', carton ='".$carton."', status = '".$status."' WHERE vendor_list_id ='".$listid."' ";
		//$chkDocket = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlDocket);
		$connectionWrite->beginTransaction();
                $data = array();
                $data['customer_name'] = $customer_name;
		$data['supplier_invoice'] = $invoice;
                $data['connote_number'] = $connote;
                $data['carton'] = $carton;
                $data['status'] = $status;
                $where = $connectionWrite->quoteInto('vendor_list_id =?', $listid);
                $connectionWrite->update($temptableDocket, $data, $where);
                $connectionWrite->commit();
	}
	else{
	
		//$sqlDocket="INSERT INTO  ".$temptableDocket." SET customer_name = '".$customer_name."', vendor_list_id ='".$listid."', supplier_invoice ='".$invoice."', connote_number = '".$connote."', carton ='".$carton."', status = '".$status."', postdate = NOW() ";
		//$chkDocket = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlDocket);
		$connectionWrite->beginTransaction();
                $data = array();
                $data['customer_name'] = $customer_name;
		$data['vendor_list_id']= $listid;
		$data['supplier_invoice'] = $invoice;
                $data['connote_number'] = $connote;
                $data['carton'] = $carton;
                $data['status'] = $status;
		$data['postdate'] = NOW();
                $connectionWrite->insert($temptableDocket, $data);
                $connectionWrite->commit();
		
	}
	
	if($status == 'sent')
	{
		$user = Mage::getSingleton('admin/session');
		$userId = $user->getUser()->getUserId();
		//$userEmail = $user->getUser()->getEmail();
		//$userFirstname = $user->getUser()->getFirstname();
		//$userLastname = $user->getUser()->getLastname();
		//$userUsername = $user->getUser()->getUsername();
		//$userPassword = $user->getUser()->getPassword();
		
		$dataall= array('user_id'=>$userId,
				'target_id'=>'',
				'caption'=>'The shipping docket has been sent.',
				'description'=>'The shipping docket has been sent fo the invoice '.$invoice.'. ',
				//'type'=>'order',
				//'entity_id'=>$order->getId(),
				//'entity_description'=>'order #'.$order->getIncrementId(),
				'task_type'=>'Independent',
				'task_create'=>'no',
				'admin'=>'yes'
				);
		
		Mage::getModel('systemalert/systemalert')->sendallalert($dataall);
	}
	
	
	
	$temptableItem=Mage::getSingleton('core/resource')->getTableName('vendor_item');
	
	//$sqlItem="UPDATE  ".$temptableItem." SET  progress = '".$status."' WHERE entity_id ='".$listid."' ";
	//$chkItem = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlItem);
	
	$connectionWrite->beginTransaction();
	$data = array();
	$data['progress'] = $status;
	$where = $connectionWrite->quoteInto('entity_id =?', $listid);
	$connectionWrite->update($temptableItem, $data, $where);
	$connectionWrite->commit();
	
	Mage::dispatchEvent('model_save_after', array('object'=>Mage::getSingleton('vendor/vendor')));
	mage::helper('AdminLogger')->updatelog($listid,'Update Vendor docket');
	
	$this->_redirect('*/*/');
	
    }
        
    public function printassignAction()
    {
	//print_r($_REQUEST);exit;
	extract($_REQUEST);
	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	foreach($user as $userid => $print)
	{
		$temptablePrint=Mage::getSingleton('core/resource')->getTableName('vendor_user_print');
		//$sqlPrint="SELECT * FROM  ".$temptablePrint." WHERE  user_id ='".$userid."' ";
		$sqlPrint = $connectionRead->select()
				->from($temptablePrint, array('*'))
				->where('user_id=?', $userid);
		$chkPrint = $connectionRead->fetchAll($sqlPrint);
		
		if(count($chkPrint)>0)
		{
			//$sqlPrint="UPDATE  ".$temptablePrint." SET print_number = '".$print."' WHERE  user_id ='".$userid."' ";
			//$chkPrint = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlPrint);
			$connectionWrite->beginTransaction();
			$data = array();
			$data['print_number'] = $print;
			$where = $connectionWrite->quoteInto('user_id =?', $userid);
			$connectionWrite->update($temptablePrint, $data, $where);
			$connectionWrite->commit();
		}
		else
		{
			//$sqlPrint="INSERT INTO  ".$temptablePrint." SET print_number = '".$print."' , user_id ='".$userid."' ";
			//$chkPrint = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlPrint);
			$connectionWrite->beginTransaction();
			$data = array();
			$data['print_number'] = $print;
			$data['user_id'] = $userid;
			$connectionWrite->insert($temptablePrint, $data);
			$connectionWrite->commit();
		}
	}
	
	$this->_redirect('*/*/');
    }
    
    public function downloadAction()
    {
        $file_path=Mage::getBaseDir('media').'/proofs/'.$this->getRequest()->getParam('file');
    
    
    //Call the download function with file path,file name and file type
    //download_file($file_path, ''.$_REQUEST['file'].'', 'text/plain');
    $this->download_file($file_path, ''.$this->getRequest()->getParam('file').'', 'text/plain');
    
    
    }
    
    public function downloadcustomAction()
    {
        $file_path=Mage::getBaseDir('media').'/custom_product/'.$this->getRequest()->getParam('file');
    
    
    //Call the download function with file path,file name and file type
    //download_file($file_path, ''.$_REQUEST['file'].'', 'text/plain');
    $this->download_file($file_path, ''.$this->getRequest()->getParam('file').'', 'text/plain');
    
    
    }
    
    public function setwarehouseAction()
    {
	//print_r($_REQUEST);exit;
	
	extract($_REQUEST);
	
	$temptableWarehouse=Mage::getSingleton('core/resource')->getTableName('warehouse_instraction');
	//$sqlWarehouse="DELETE FROM ".$temptableWarehouse." WHERE product_id = '".$productid."' ";
	//$chkWarehouse = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlWarehouse);
	$connectionWrite->beginTransaction();
	$condition = array($connectionWrite->quoteInto('product_id=?', $productid));
	$connectionWrite->delete($temptableWarehouse, $condition);
	$connectionWrite->commit();
	
	foreach($caption as $key=>$value1)
	{
		$title = addslashes($value1);
		if($title != '')
		{
			//$sqlWarehouse="INSERT INTO ".$temptableWarehouse." SET product_id = '".$productid."', caption = '".$title."', caption_value = '".$value[$key]."' ";
			//$chkWarehouse = Mage::getSingleton('core/resource')->getConnection('core_write')->query($sqlWarehouse);
			$connectionWrite->beginTransaction();
			$data = array();
			$data['product_id'] = $productid;
			$data['caption'] = $title;
			$data['caption_value'] = $value[$key];
			$connectionWrite->insert($temptableWarehouse, $data);
			$connectionWrite->commit();
		}
	}
	mage::helper('AdminLogger')->updatelog($productid,'Update Warehouse Instructions');
	
	$url = Mage::helper('adminhtml')->getUrl("adminhtml/catalog_product/edit/id/".$productid);
	$url = str_replace('p//c','p/admin/c',$url);
        Mage::log($url); //To check if URL is correct (and it is correct)
        Mage::app()->getResponse()->setRedirect($url);
    }
    
    public function setoptionAction()
    {
	//print_r($_REQUEST);exit;
	
	extract($_REQUEST);
	
	$temptableOption=Mage::getSingleton('core/resource')->getTableName('vendor_option');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	
	$connectionWrite->beginTransaction();
	$condition = array($connectionWrite->quoteInto('product_id=?', $product_id),$connectionWrite->quoteInto('type=?', $type));
	$connectionWrite->delete($temptableOption, $condition);
	$connectionWrite->commit();
	
	$_Product = Mage::getModel('catalog/product')->load($product_id);

	
	foreach($title as $key=>$value1)
	{
		$title2 = addslashes($value1);
		if($title2 != '')
		{
			$connectionWrite->beginTransaction();
			$data = array();
			$data['title'] = $title2;
			$data['product_id'] = $product_id;
			$data['type'] = $type;
			$data['postdate'] = date('Y-m-d H:i:s');
			$connectionWrite->insert($temptableOption, $data);
			$connectionWrite->commit();
			
			$lastInsertId = $connectionWrite->fetchOne('SELECT last_insert_id()');
			
			
			foreach($customvalue[$key] as $key2=>$value2)
			{
				$fileNameVal = '';
				if(isset($_FILES['customfile']['name'][$key][$key2]) and (file_exists($_FILES['customfile']['tmp_name'][$key][$key2])))
				{
                   
					$file_name=$_FILES['customfile']['name'][$key][$key2];
					
					$expFilename=explode(".",$file_name);
					$fileNameVal= $_Product->getSku().'_'.$type.'_'.$lastInsertId.".".end($expFilename);
					
					
					$mediaPath=Mage::getBaseDir('media') . DS ;
					//$path2 = $mediaPath.'upload_image/'.$fileNameVal;
					$path2 = $mediaPath.'custom_product/'.$fileNameVal;
					chmod($path2,0777);
					$filepath = $fileNameVal;
					
					//file_put_contents($path2, $_FILES['item_file']['tmp_name'][$key]);
					move_uploaded_file($_FILES['customfile']['tmp_name'][$key][$key2],$path2);
				}
				else
				$fileNameVal = $existfile[$key][$key2];
		
				$connectionWrite->beginTransaction();
				$data1 = array();
				$data1['sub_title'] = $customtitle[$key][$key2];
				$data1['sub_value'] = $value2;
				$data1['parent_id'] = $lastInsertId;
				$data1['product_id'] = $product_id;
				if($fileNameVal != '')
				$data1['file'] = $fileNameVal;
				$data1['type'] = $type;
				$data1['postdate'] = date('Y-m-d H:i:s');
				$connectionWrite->insert($temptableOption, $data1);
				$connectionWrite->commit(); 
			}
		}
	}
	
	$url = Mage::helper('adminhtml')->getUrl("adminhtml/catalog_product/edit/id/".$product_id);
	$url = str_replace('p//c','p/admin/c',$url);
        Mage::log($url); //To check if URL is correct (and it is correct)
        Mage::app()->getResponse()->setRedirect($url);
    }

    
    /////// 15-11-2013 SOC
    
    public function setoptionshipmentAction()
    {
	//echo "<pre>";print_r($_REQUEST); exit;
	
	extract($_REQUEST);
	
	$temptableOption=Mage::getSingleton('core/resource')->getTableName('vendor_option');
	$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	
	foreach($title as $key=>$value)
	{
		//echo "<br>"; echo $key;echo "<br>";
		
		$connectionWrite->beginTransaction();
		$condition = array($connectionWrite->quoteInto('product_id=?', $key),$connectionWrite->quoteInto('type=?', $type));
		$connectionWrite->delete($temptableOption, $condition);
		$connectionWrite->commit();
		$_Product = Mage::getModel('catalog/product')->load($key);
		
		foreach($value as $k=>$value1){
			//echo "<br>"; echo "VAL --"; echo $k ." : :".$value1;echo "<br>";
			$title2 = addslashes($value1);
			if($title2 != '')
			{
				$connectionWrite->beginTransaction();
				$data = array();
				$data['title'] = $title2;
				$data['product_id'] = $key;
				$data['type'] = $type;
				$data['postdate'] = date('Y-m-d H:i:s');
				$connectionWrite->insert($temptableOption, $data);
				$connectionWrite->commit();
				
				$lastInsertId = $connectionWrite->fetchOne('SELECT last_insert_id()');
				
			
				foreach($customvalue[$key][$k] as $key2=>$value2)
				{
					
					//echo "<br>"; echo "VALUE:"; echo $value2;echo "<br>";
					
					$fileNameVal = '';
					if(isset($_FILES['customfile']['name'][$key][$k][$key2]) and (file_exists($_FILES['customfile']['tmp_name'][$key][$k][$key2])))
					{
					               
						//echo "<br>"; echo "FILE NAME : ".$file_name=$_FILES['customfile']['name'][$key][$k][$key2]; echo "<br>";
						
						$file_name=$_FILES['customfile']['name'][$key][$k][$key2];
						$expFilename=explode(".",$file_name);
						$fileNameVal= $_Product->getSku().'_'.$type.'_'.$lastInsertId.".".end($expFilename);
						
						
						$mediaPath=Mage::getBaseDir('media') . DS ;
						//$path2 = $mediaPath.'upload_image/'.$fileNameVal;
						$path2 = $mediaPath.'custom_product/'.$fileNameVal;
						chmod($path2,0777);
						$filepath = $fileNameVal;
						
						//file_put_contents($path2, $_FILES['item_file']['tmp_name'][$key]);
						move_uploaded_file($_FILES['customfile']['tmp_name'][$key][$k][$key2],$path2);
					}
					else
					//echo "<br>"; echo "FILE NAME ::"; echo $customtitle[$key][$k][$key2];echo "<br>";
					
					$fileNameVal = $existfile[$key][$k][$key2];
					
					$connectionWrite->beginTransaction();
					$data1 = array();
					$data1['sub_title'] = $customtitle[$key][$k][$key2];
					$data1['sub_value'] = $value2;
					$data1['parent_id'] = $lastInsertId;
					$data1['product_id'] = $key;
					if($fileNameVal != '')
					$data1['file'] = $fileNameVal;
					$data1['type'] = $type;
					$data1['postdate'] = date('Y-m-d H:i:s');
					$connectionWrite->insert($temptableOption, $data1);
					$connectionWrite->commit(); 
				}
			}
			
		}
		
	}
	
	$url = Mage::helper('adminhtml')->getUrl("adminhtml/sales_shipment/view/shipment_id/".$shipmentId);
	//$url = str_replace('p//c','p/admin/c',$url);
        Mage::log($url); //To check if URL is correct (and it is correct)
        Mage::app()->getResponse()->setRedirect($url);
    }
    
    
    /////// 15-11-2013 EOC
    
    /********************** Start for vendor send image ****************************/
	public function loadsentimageAction()
	{
	    //print_r($_REQUEST);exit;
	    extract($_REQUEST);
	    $connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	    $temptableImage=Mage::getSingleton('core/resource')->getTableName('vendor_sent_image');
	    
	    $select = $connectionRead->select()
	    ->from($temptableImage, array('*'))
	    ->where('vendor_list_id=?',$listid);
	    
	    $baseurl = Mage::helper('adminhtml')->getUrl('vendor/adminhtml_vendor/downloadsent');
	    
	    
	    $result = $connectionRead->fetchAll($select);
	    foreach($result as $sentimage)
	    {
		    echo '<span><a href="'.$baseurl.'file/'.$sentimage['image'].'/'.'">'.$sentimage['image'].'</a>   <span style="cursor:pointer;" onclick="imagedelete('.$sentimage['vendor_list_id'].','.$sentimage['entity_id'].');"><img src="'.str_replace('/tablethrows/','/artis/',Mage::getDesign()->getSkinUrl()).'images/delete_icon.png'.'"/></span></span><br/>';
	    }
	    
		echo '@@@';
	
		if(Mage::getSingleton('admin/session')->getUser())
		echo 'yes';
		else
		echo 'no';
	}
	
	public function loadsentuploadAction()
	{
	    //print_r($_REQUEST);exit;
	    extract($_REQUEST);
	    $connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	    $temptableImage=Mage::getSingleton('core/resource')->getTableName('vendor_sent_image');
	    
	    $select = $connectionRead->select()
	    ->from($temptableImage, array('*'))
	    ->where('vendor_list_id=?',$listid);
	    
	    $baseurl = Mage::helper('adminhtml')->getUrl('vendor/adminhtml_vendor/downloadsent');
	    
	    
	    $result = $connectionRead->fetchAll($select);
	    if(count($result) > 0)
	    {
		foreach($result as $sentimage)
		{
			echo '<a style="margin-left: 29px;" href="'.$baseurl.'file/'.$sentimage['image'].'/'.'"><img title="Click to download" style="width:75px; height:75px;" src="'.Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA).'vendor/'.$sentimage['image'].'"/></a>  ';
		}
	    }
	    else{
		echo '<span style="margin-left: 29px;">vendor did not upload the images.</span>';
	    }
	}
	
	public function removesentimageAction()
	{
		//print_r($_REQUEST);exit;
		extract($_REQUEST);
		$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
		$temptableImage=Mage::getSingleton('core/resource')->getTableName('vendor_sent_image');
	    
		$connectionWrite->beginTransaction();
		$condition = array($connectionWrite->quoteInto('entity_id=?', $imageid));
		$connectionWrite->delete($temptableImage, $condition);
		$connectionWrite->commit();
	}
    
	public function savesentimageAction()
	{
		//print_r($_FILES);exit;
		extract($_REQUEST);
		$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
		$connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
		$temptableImage=Mage::getSingleton('core/resource')->getTableName('vendor_sent_image');
		
		foreach($_FILES['item_file']['name'] as $key=>$value)
		{
		    
		    if(isset($_FILES['item_file']['name'][$key]) and (file_exists($_FILES['item_file']['tmp_name'][$key]))) {
		       
			$file_name=$_FILES['item_file']['name'][$key];
			
			$expFilename=explode(".",$file_name);
			$fileNameVal=time()."_".$expFilename[0].".".end($expFilename);
			
			
			$mediaPath=Mage::getBaseDir('media') . DS ;
			//$path2 = $mediaPath.'upload_image/'.$fileNameVal;
			$path2 = $mediaPath.'vendor/'.$fileNameVal;
			chmod($path2,0777);
			$filepath = $fileNameVal;
			
			//file_put_contents($path2, $_FILES['item_file']['tmp_name'][$key]);
			if(move_uploaded_file($_FILES['item_file']['tmp_name'][$key],$path2))
			{
				$connectionWrite->beginTransaction();
				$data = array();
				$data['vendor_list_id']= $listid;
				$data['image']=$filepath;
				$connectionWrite->insert($temptableImage, $data);
				$connectionWrite->commit();
			  
			}
		    }
		}
		$this->_redirect('*/*/');
	   
	}
    
    /********************** End for vendor send image ****************************/
    public function downloadsentAction()
    {
        $file_path=Mage::getBaseDir('media').'/vendor/'.$this->getRequest()->getParam('file');
    
    
	//Call the download function with file path,file name and file type
	//download_file($file_path, ''.$_REQUEST['file'].'', 'text/plain');
	$this->download_file($file_path, ''.$this->getRequest()->getParam('file').'', 'text/plain');
    
    
    }
    
    
    public function download_file($file, $name, $mime_type='')
    {
       
        $size = filesize($file);
        $name = rawurldecode($name);
       
        $known_mime_types=array(
               "pdf" => "application/pdf",
               "txt" => "text/plain",
               "html" => "text/html",
               "htm" => "text/html",
               "exe" => "application/octet-stream",
               "zip" => "application/zip",
               "doc" => "application/msword",
               "xls" => "application/vnd.ms-excel",
               "ppt" => "application/vnd.ms-powerpoint",
               "gif" => "image/gif",
               "png" => "image/png",
               "jpeg"=> "image/jpg",
               "jpg" =>  "image/jpg",
               "php" => "text/plain"
        );
       
        if($mime_type==''){
                $file_extension = strtolower(substr(strrchr($file,"."),1));
                if(array_key_exists($file_extension, $known_mime_types)){
                       $mime_type=$known_mime_types[$file_extension];
                } else {
                       $mime_type="application/force-download";
                };
        };
       
        @ob_end_clean(); 
       
        // required for IE, otherwise Content-Disposition may be ignored
        if(ini_get('zlib.output_compression'))
         ini_set('zlib.output_compression', 'Off');
       
        header('Content-Type: ' . $mime_type);
        header('Content-Disposition: attachment; filename="'.$name.'"');
        header("Content-Transfer-Encoding: binary");
        header('Accept-Ranges: bytes');
        header("Cache-control: private");
        header('Pragma: private');
        readfile($file); 
    }
    
     public function checkuserAction()
    {
	if(Mage::getSingleton('admin/session')->getUser())
	echo 'yes';
	else
	echo 'no';
    }
    
     /************************* for download attachment 19_12_2013 ************************/
    public function loadattachmentAction()
    {
	//print_r($_REQUEST);exit;
	extract($_REQUEST);
	
	$connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
	$temptableProduct=Mage::getSingleton('core/resource')->getTableName('catalog_product_entity');
	$temptableFiles=Mage::getSingleton('core/resource')->getTableName('downloads_files');
	$temptableRelation=Mage::getSingleton('core/resource')->getTableName('downloads_relation');
	
	$select = $connectionRead->select()
	->from($temptableProduct, array('*'))
	->where('sku=?',$productid);
	
	$product = $connectionRead->fetchRow($select);
	
	$select = $connectionRead->select()
	->from($temptableRelation, array('*'))
	->join(
                    array('file'=>$temptableFiles),
                    'file.file_id = '.$temptableRelation.'.file_id',
                    array('*')
                  )
	->where($temptableRelation.'.product_id=?',$product['entity_id']);
	
	
	
	$result = $connectionRead->fetchAll($select);
	
	if(count($result) > 0)
	{
		$url2 = Mage::helper('adminhtml')->getUrl('vendor/adminhtml_vendor/downloadall');
		foreach($result as $file)
		{
			echo '<div><a href="'.str_replace('//s','/admin/s',$url2).'file/'.$file['filename'].'/'.'store/downloads-'.$file['file_id'].'">'.$file['filename'].'</a></div>';
		}
	}
	else
	{
		echo '<div>There are no product template for this product.</div>';
	}
	
	
    }
    
	public function downloadallAction()
	{
		$store = str_replace('-','/',$this->getRequest()->getParam('store'));
		$file_path=Mage::getBaseDir('media').'/'.$store.'/'.$this->getRequest()->getParam('file');
		
		
		//Call the download function with file path,file name and file type
		//download_file($file_path, ''.$_REQUEST['file'].'', 'text/plain');
		$this->download_file($file_path, ''.$this->getRequest()->getParam('file').'', 'text/plain');
	
	
	}
	/************************* for download attachment 19_12_2013 ************************/
	/*************** Start for show vendor instraction in vendor list page 28_02_2014 *************************/
	public function getVendorInformationAction()
	{
		extract($_REQUEST);
		$_order = Mage::getModel('sales/order')->load($orderid);
		echo '<div class="entry-edit">
<form name="" action="<?php echo $urlwr; ?>" method="post" enctype="multipart/form-data" >
<div class="entry-edit-head"><h4>'.$this->__('Vendor Instructions').'</h4>';
 /*if($roleName == 'Administrators'){ ///18-11-2013 SOC 
	 
            <span class="submitclass" style="float: right;" >
               <input name="submit" id="submit" type="submit"  class="submit-img" style="float: left;" value="Submit" />
           </span>
	<?php }*/ 
	echo '</div>
<div class="grid np">
  <div class="hor-scroll">
    <table cellspacing="0" class="data order-tables">
        <!--<col />
        <col width="1" />-->
        <thead>
            <tr class="headings">
                <th>'.$this->__('Product').'</th>
                <th><span class="nobr">'.$this->__('Instructions').'</span></th>
            </tr>
        </thead>';
       $_items = $_order->getAllItems() ;
        
        echo '<tbody>
         <tr><td colspan="2">
         </td></tr>  '; 
      $_i=0;foreach ($_items as $_item):  $_i++;
      
      if($_item->getProductId() == $proId):
      $style = $_i%2?"odd":"even";
            
                echo '<tr class="'.$style.'">';
		
                
                $connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
                $temptableOption=Mage::getSingleton('core/resource')->getTableName('vendor_option');
                $proId=$_item->getProductId();
                $select = $connectionRead->select()
			      ->from($temptableOption, array('*'))
			      ->where('type=?',1)
			      ->where('product_id=?',$proId);
			      
		$result = $connectionRead->fetchAll($select);
                $url2 = Mage::helper('adminhtml')->getUrl('vendor/adminhtml_vendor/downloadcustom');
                $i = 1;
		$l=1;
                
                echo '<td style="width:20%;">
			<table cellpadding="0" cellspacing="0"  ><tr><td style="width:90%;border:0px;"><span style="float:left;">'.$_item->getName().' - (Sku :'.$_item->getSku().')'.'</span></td>
			<td style="width:10%;border:0px;"> </td> </tr></table></td>
                
                
                
                <td>
                    <table class="tabclass" id="tblid_'.$proId.'">
                    <tr>
                    <td>';
		
                    foreach($result as $option){
                    if($option['parent_id'] == 0){ 
                     echo '<table id="tab1_'.$i.'" class="tabclass" style="width: 100%;" cellpadding="0" cellspacing="0">
				    <tr>
				       <td>
					  <table style="width: 100%;">
					     <tr>
						<!--<td>Title</td>-->
						<td>
						   <span>'.$option['title'].'</span>
						
							
					       </td>
					     </tr>
					  </table>
				       </td>
				       
				    </tr>
				    <tr>
				       <td class="grid">
					  <table style="width: 100%;" class="border" cellpadding="0" cellspacing="0">
					     <thead>
						<tr class="headings">
						   <td class="tabtitle">Title</td>
						   <td class="tabtitle">Value</td>
						   <td class="tabfile">File</td>
						   
						</tr>
					     </thead>
					     <tbody id="row1_'.$i."_".$proId.'">';
					     
					     
						foreach($result as $value)
						{
                                                    
						   if($value['parent_id'] == $option['entity_id'])
						   {
						
						echo '<tr id="ind1_'.$l."_".$proId.'">
                                                
                                                
                                                <td style="width:40%;">'.$value['sub_title'].'</td>
						<td style="width:40%;">'.$value['sub_value'].'</td>
                                               
						<td style="width:20%;" >';
						$ext = end(explode('.',$value['file']));
						$supported_image = array('gif','jpg','jpeg','png');
						if(in_array($ext,$supported_image))
						{
							$file = Mage::getBaseUrl(Mage_Core_Model_Store::URL_TYPE_MEDIA).'custom_product/'.$value['file'];
							
							echo '<span><img onclick="zoom(\''.$file.'\');" style="width:27px; height:24px; " src="'.$file.'"/></span>';
							
						}
						else if($ext == 'pdf')
						{
							echo '<span><a href="'.$url2.'file/'.$value['file'].'"><img style="width:27px; height:24px; " src="'.Mage::getDesign()->getSkinUrl().'images/pdf_icon.jpg"/></a></span>';
						}
						else if($ext == 'doc' or $ext == 'docx')
						{
							echo '<span><a href="'.$url2.'file/'.$value['file'].'"><img style="width:27px; height:24px; " src="'.Mage::getDesign()->getSkinUrl().'images/doc_icon.jpg"/></a></span>';
						}
						
						
                                                echo '</td>
						
						</tr>';
						   
						   }
						   $l++;
						}
					    
					    echo '</tbody >
					  </table>
				       </td>
				    </tr>
				 </table>';
			
			
				    $i++;	 
				
                    
                   }
                }
		
                
                
                echo '</td>
                    </tr>
                    <tr>
                        <td height="10" align="left" valign="middle" colspan="6" id="content'.$proId.'">
                        
			</td>
                    </tr>
                   <input type="hidden" id="form_count1" value="'.$i.'" />
                   <input type="hidden" id="row_count1" value="'.$l.'"  />
                </table>
                
                
                
                </td></tr>';
              endif;  
            
         endforeach;
       
        echo '</tbody>
    </table>
     </form>
  </div>
</div>
</div>';
	}
	/*************** End for show vendor instraction in vendor list page 28_02_2014 *************************/
    
    
}