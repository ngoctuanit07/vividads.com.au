<?php

class Artis_Systemalert_Model_Systemalert extends Mage_Core_Model_Abstract
{
    public function _construct()
    {
        parent::_construct();
        $this->_init('systemalert/systemalert');
    }
    
     
    public function sendalert($event,$type,$object)
    {
        $connectionRead = Mage::getSingleton('core/resource')->getConnection('core_read');
        $connectionWrite = Mage::getSingleton('core/resource')->getConnection('core_write');
	$temptableAlertTask=Mage::getSingleton('core/resource')->getTableName('systemalert_task');
        $temptableAlertCondition=Mage::getSingleton('core/resource')->getTableName('systemalert_condition');
	$temptableAlert=Mage::getSingleton('core/resource')->getTableName('system_alert');
        
        $select = $connectionRead->select()
                ->from($temptableAlert, array('*'))
                ->where('task_id=?',$event);
                
        $result = $connectionRead->fetchAll($select);
        
        foreach($result as $alert)
        {
            $select = $connectionRead->select()
                    ->from($temptableAlertTask, array('*'))
                    ->where('parent_id=?',$alert['entity_id']);
                    
            $task = $connectionRead->fetchRow($select);
            
            $select = $connectionRead->select()
                    ->from($temptableAlertCondition, array('*'))
                    ->where('parent_id=?',$alert['entity_id']);
                    
            $Condition = $connectionRead->fetchAll($select);
            
            $flag_con = '';
            foreach($Condition as $con)
            {
                if($con['attr_model'] == 'order')
                {
                    $temptableOrder=Mage::getSingleton('core/resource')->getTableName('sales_flat_order');
                    
                    $select = $connectionRead->select()
                    ->from($temptableOrder, array('*'))
                    ->where($con['attr_field'].' '.$con['attr_condition'].'?',$con['attr_value'])
                    ->where('entity_id=?',$object->getId());
                    
                    $Condition = $connectionRead->fetchAll($select);
                    
                    if(count($Condition) > 0)
                    {
                        if($con['attr_action'] == '')
                        $flag_con .= '1';
                        elseif($con['attr_action'] == 'OR')
                        $flag_con .= '1 or';
                        elseif($con['attr_action'] == 'AND')
                        $flag_con .= '1 and';
                    }
                    else
                    {
                        if($con['attr_action'] == '')
                        $flag_con .= '0';
                        elseif($con['attr_action'] == 'OR')
                        $flag_con .= '0 or';
                        elseif($con['attr_action'] == 'AND')
                        $flag_con .= '0 and';
                    }
                }
                else if($con['attr_model'] == 'product')
                {
                    $attr = explode('_',$con['attr_field']);
                    $str = 'get';
                    foreach ($attr as $key=>$val){
                        $val = ucfirst($val);
                        $str .= $val;
                    }
                    
                    $value =  $object->$str();
                    
                     if($value.' '.$con['attr_condition'].$con['attr_value'])
                    {
                        if($con['attr_action'] == '')
                        $flag_con .= ' 1';
                        elseif($con['attr_action'] == 'OR')
                        $flag_con .= '1 or';
                        elseif($con['attr_action'] == 'AND')
                        $flag_con .= '1 and';
                    }
                    else
                    {
                        if($con['attr_action'] == '')
                        $flag_con .= ' 0';
                        elseif($con['attr_action'] == 'OR')
                        $flag_con .= '0 or';
                        elseif($con['attr_action'] == 'AND')
                        $flag_con .= '0 and';
                    }
                }
            }
            
            
            if($flag_con)
            {
                $temptableOrganiger = Mage::getSingleton('core/resource')->getTableName('organizer_task');
               
                $connectionWrite->beginTransaction();
                $data = array();
                $data['ot_created_at']= NOW();
                $data['ot_author_user'] = $task['user_id'];
                $data['ot_target_user'] = $task['target_id']; 
                $data['ot_caption'] = addslashes($task['caption']); 
                $data['ot_description'] = addslashes($task['description']); 
                $data['ot_deadline'] = $finished_date; 
                
                $data['ot_entity_type'] = $type; 
                $data['ot_entity_id'] = $object->getId(); 
                $data['ot_entity_description'] = addslashes($type.' #'.$object->getIncrementId()); 
                $data['ot_task_type']= 'Independent';
                $connectionWrite->insert($temptableOrganiger, $data);
                $connectionWrite->commit();
                
//For chain task
                $last_id = $connectionWrite->fetchOne('SELECT last_insert_id()');
                
                    $temptableChain = Mage::getSingleton('core/resource')->getTableName('task_chain');
                    if($connectionWrite->isTableExists($temptableChain))
                    {
                        $connectionWrite->beginTransaction();
                        $data = array();
                        $data['task_id']=$last_id;
                        $data['order_quote_id']=$object->getId();
                        $data['task_type']='Independent';
                        $connectionWrite->insert($temptableChain,$data);
                        $connectionWrite->commit();
                        
                    }
                    
                ///* Sender Name */
                $supportName = Mage::getStoreConfig('trans_email/ident_support/name'); 
                ///* Sender Email */
                $supportEmail = Mage::getStoreConfig('trans_email/ident_support/email');    
                    
                $userdata = Mage::getModel('admin/user')->load($task['target_id']);
                $mail = Mage::getModel('core/email');
                $mail->setToName($userdata->getName());
                $mail->setToEmail($userdata->getEmail());
                $mail->setBody($task['description']);
                $mail->setSubject($task['caption']);
                $mail->setFromEmail($supportEmail);
                $mail->setFromName($supportName);
                $mail->setType('html');// YOu can use Html or text as Mail format
                $mail->send();
            }
        }
        
        
    }
}